"use strict";
<<<<<<< HEAD
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var failureTracker_exports = {};
__export(failureTracker_exports, {
  FailureTracker: () => FailureTracker
});
module.exports = __toCommonJS(failureTracker_exports);
class FailureTracker {
  constructor(_config) {
    this._config = _config;
    this._failureCount = 0;
    this._hasWorkerErrors = false;
=======

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FailureTracker = void 0;
/**
 * Copyright Microsoft Corporation. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

class FailureTracker {
  constructor(_config) {
    this._failureCount = 0;
    this._hasWorkerErrors = false;
    this._rootSuite = void 0;
    this._config = _config;
>>>>>>> 0bbb606fffa4286e884fc3bf9391c67f4bdb0fbb
  }
  onRootSuite(rootSuite) {
    this._rootSuite = rootSuite;
  }
  onTestEnd(test, result) {
<<<<<<< HEAD
    if (test.outcome() === "unexpected" && test.results.length > test.retries)
      ++this._failureCount;
=======
    // Test is considered failing after the last retry.
    if (test.outcome() === 'unexpected' && test.results.length > test.retries) ++this._failureCount;
>>>>>>> 0bbb606fffa4286e884fc3bf9391c67f4bdb0fbb
  }
  onWorkerError() {
    this._hasWorkerErrors = true;
  }
  hasReachedMaxFailures() {
    return this.maxFailures() > 0 && this._failureCount >= this.maxFailures();
  }
  hasWorkerErrors() {
    return this._hasWorkerErrors;
  }
  result() {
<<<<<<< HEAD
    return this._hasWorkerErrors || this.hasReachedMaxFailures() || this.hasFailedTests() || this._config.failOnFlakyTests && this.hasFlakyTests() ? "failed" : "passed";
  }
  hasFailedTests() {
    return this._rootSuite?.allTests().some((test) => !test.ok());
  }
  hasFlakyTests() {
    return this._rootSuite?.allTests().some((test) => test.outcome() === "flaky");
=======
    return this._hasWorkerErrors || this.hasReachedMaxFailures() || this.hasFailedTests() || this._config.cliFailOnFlakyTests && this.hasFlakyTests() ? 'failed' : 'passed';
  }
  hasFailedTests() {
    var _this$_rootSuite;
    return (_this$_rootSuite = this._rootSuite) === null || _this$_rootSuite === void 0 ? void 0 : _this$_rootSuite.allTests().some(test => !test.ok());
  }
  hasFlakyTests() {
    var _this$_rootSuite2;
    return (_this$_rootSuite2 = this._rootSuite) === null || _this$_rootSuite2 === void 0 ? void 0 : _this$_rootSuite2.allTests().some(test => test.outcome() === 'flaky');
>>>>>>> 0bbb606fffa4286e884fc3bf9391c67f4bdb0fbb
  }
  maxFailures() {
    return this._config.config.maxFailures;
  }
}
<<<<<<< HEAD
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  FailureTracker
});
=======
exports.FailureTracker = FailureTracker;
>>>>>>> 0bbb606fffa4286e884fc3bf9391c67f4bdb0fbb
