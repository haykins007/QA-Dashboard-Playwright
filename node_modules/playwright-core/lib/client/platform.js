"use strict";
<<<<<<< HEAD
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var platform_exports = {};
__export(platform_exports, {
  emptyPlatform: () => emptyPlatform
});
module.exports = __toCommonJS(platform_exports);
var import_colors = require("../utils/isomorphic/colors");
const noopZone = {
  push: () => noopZone,
  pop: () => noopZone,
  run: (func) => func(),
  data: () => void 0
};
const emptyPlatform = {
  name: "empty",
  boxedStackPrefixes: () => [],
  calculateSha1: async () => {
    throw new Error("Not implemented");
  },
  colors: import_colors.webColors,
  createGuid: () => {
    throw new Error("Not implemented");
=======

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.emptyPlatform = void 0;
var _colors = require("../utils/isomorphic/colors");
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const noopZone = {
  push: () => noopZone,
  pop: () => noopZone,
  run: func => func(),
  data: () => undefined
};
const emptyPlatform = exports.emptyPlatform = {
  name: 'empty',
  boxedStackPrefixes: () => [],
  calculateSha1: async () => {
    throw new Error('Not implemented');
  },
  colors: _colors.webColors,
  createGuid: () => {
    throw new Error('Not implemented');
>>>>>>> 0bbb606fffa4286e884fc3bf9391c67f4bdb0fbb
  },
  defaultMaxListeners: () => 10,
  env: {},
  fs: () => {
<<<<<<< HEAD
    throw new Error("Not implemented");
  },
  inspectCustom: void 0,
=======
    throw new Error('Not implemented');
  },
  inspectCustom: undefined,
>>>>>>> 0bbb606fffa4286e884fc3bf9391c67f4bdb0fbb
  isDebugMode: () => false,
  isJSDebuggerAttached: () => false,
  isLogEnabled(name) {
    return false;
  },
  isUnderTest: () => false,
<<<<<<< HEAD
  log(name, message) {
  },
  path: () => {
    throw new Error("Function not implemented.");
  },
  pathSeparator: "/",
  showInternalStackFrames: () => false,
  streamFile(path, writable) {
    throw new Error("Streams are not available");
  },
  streamReadable: (channel) => {
    throw new Error("Streams are not available");
  },
  streamWritable: (channel) => {
    throw new Error("Streams are not available");
  },
  zones: { empty: noopZone, current: () => noopZone }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  emptyPlatform
});
=======
  log(name, message) {},
  path: () => {
    throw new Error('Function not implemented.');
  },
  pathSeparator: '/',
  showInternalStackFrames: () => false,
  streamFile(path, writable) {
    throw new Error('Streams are not available');
  },
  streamReadable: channel => {
    throw new Error('Streams are not available');
  },
  streamWritable: channel => {
    throw new Error('Streams are not available');
  },
  zones: {
    empty: noopZone,
    current: () => noopZone
  }
};
>>>>>>> 0bbb606fffa4286e884fc3bf9391c67f4bdb0fbb
